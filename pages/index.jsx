import Head from 'next/head';
import React, { useEffect, useState } from 'react';
import Header from '../src/components/header/Header';
import MovieRow from '../src/components/movie-row/MovieRow'
import FeaturedMovie from '../src/components/featured-movie/FeaturedMovie';
import axios from 'axios'
import dbApi from './api/dbApi'
import { apiBase, apiKey} from '../lib/tmdb'



export default function Home({list}) {
  
  const [movieList, setMovieList] = useState([]);

  const [featuredData, setFeaturedData] = useState(null);

  //variavel para controlar quando o header deve ficar transparente ou preto
  const [blackHeader, setBlackHeader] = useState(false);


  useEffect((  ) => {

    const loadAll = async () => {

    //Pegando a lista total de filmes do tmdb
    let list = await dbApi.getHomeList();
    setMovieList(list);

    //Pegando  aleatoriamente o filme em destaque(featured)
    let featuredMovie = list.filter(i=>i.slug === 'originals');
    let randomFeatured = Math.floor(Math.random() * (featuredMovie[0].items.results.length - 1))
    let featuredChosen = featuredMovie[0].items.results[randomFeatured]; 
    let chosenInfo = await dbApi.getMovieInfo(featuredChosen.id, 'tv');
    setFeaturedData(chosenInfo);
    }
    loadAll();
  }, []);
  
  //useeffect usado no header para controlar 
  //quando deve ficar black ou transparente
  useEffect(() => {

    const scrollListener = () => {
      if(window.scrollY > 10){
        setBlackHeader(true);
      }else {
        setBlackHeader(false);
      }
    }

    window.addEventListener('scroll', scrollListener);

    return () => {
      window.removeEventListener('scroll', scrollListener);
    }
  }, []);
  
  
  return (
    <main className="body">
      <Head>
        <title>NextFlix</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header black={blackHeader} />
      
      <div className="page">

      {featuredData && <FeaturedMovie 
      item={featuredData} />}

        
          <section className="lists">
          {movieList.map( (item,key) => (

            
              <MovieRow key={key} 
              
              title={item?.title} 
              items={item?.items}
            
              
              />
            
          
          ))}
          </section>
          <div>

          </div>
     
      </div>
      
      
  


      <footer>
        Made using Next framework for React
        <br/>by @guilhermemm-dev
        <br/>This is not a commercial project, 
        <br/>it was made for the purpose of practical learning only.
      </footer>
      
    
      {movieList.length <= 0 && /* verificação para o loading aparecer apenas antes do site carregar */
       <div className="loading">
        <img src="https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif" />
        </div>
      }


    </main>
  );
}


//function for set server side render mode
export async function getServerSideProps() {
  
              
  const response = await axios.get(`${apiBase}/trending/tv/week?api_key=${apiKey}`);
  

  return{

    props:{
      list: response.data.results
    }

  }
}
